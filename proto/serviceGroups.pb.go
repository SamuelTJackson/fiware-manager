// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serviceGroups.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ServiceGroup struct {
	ApiKey           string             `protobuf:"bytes,1,opt,name=ApiKey,json=apikey,omitempty" json:"ApiKey,omitempty"`
	EntityType       string             `protobuf:"bytes,2,opt,name=EntityType,json=entity_type,omitempty" json:"EntityType,omitempty"`
	Resource         string             `protobuf:"bytes,3,opt,name=Resource,json=resource,omitempty" json:"Resource,omitempty"`
	Commands         []*Command         `protobuf:"bytes,4,rep,name=Commands,json=commands,omitempty" json:"Commands,omitempty"`
	Attributes       []*Attribute       `protobuf:"bytes,5,rep,name=Attributes,json=attributes,omitempty" json:"Attributes,omitempty"`
	StaticAttributes []*StaticAttribute `protobuf:"bytes,6,rep,name=StaticAttributes,json=static_attributes,omitempty" json:"StaticAttributes,omitempty"`
	Lazy             []*Lazy            `protobuf:"bytes,7,rep,name=Lazy,json=lazy,omitempty" json:"Lazy,omitempty"`
	Service          string             `protobuf:"bytes,8,opt,name=Service,json=service,omitempty" json:"Service,omitempty"`
	Subservice       string             `protobuf:"bytes,9,opt,name=Subservice,json=subservice,omitempty" json:"Subservice,omitempty"`
	ID               string             `protobuf:"bytes,10,opt,name=ID,json=_id,omitempty" json:"ID,omitempty"`
}

func (m *ServiceGroup) Reset()                    { *m = ServiceGroup{} }
func (m *ServiceGroup) String() string            { return proto1.CompactTextString(m) }
func (*ServiceGroup) ProtoMessage()               {}
func (*ServiceGroup) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ServiceGroup) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *ServiceGroup) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *ServiceGroup) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ServiceGroup) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *ServiceGroup) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ServiceGroup) GetStaticAttributes() []*StaticAttribute {
	if m != nil {
		return m.StaticAttributes
	}
	return nil
}

func (m *ServiceGroup) GetLazy() []*Lazy {
	if m != nil {
		return m.Lazy
	}
	return nil
}

func (m *ServiceGroup) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ServiceGroup) GetSubservice() string {
	if m != nil {
		return m.Subservice
	}
	return ""
}

func (m *ServiceGroup) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Command struct {
	Name string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,json=type" json:"Type,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto1.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Command) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Attribute struct {
	ObjectID string `protobuf:"bytes,1,opt,name=ObjectID,json=object_id" json:"ObjectID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=Type,json=type" json:"Type,omitempty"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto1.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Attribute) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type StaticAttribute struct {
	Value string `protobuf:"bytes,1,opt,name=Value,json=value" json:"Value,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=Type,json=type" json:"Type,omitempty"`
}

func (m *StaticAttribute) Reset()                    { *m = StaticAttribute{} }
func (m *StaticAttribute) String() string            { return proto1.CompactTextString(m) }
func (*StaticAttribute) ProtoMessage()               {}
func (*StaticAttribute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *StaticAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *StaticAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StaticAttribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Lazy struct {
	Name string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,json=type" json:"Type,omitempty"`
}

func (m *Lazy) Reset()                    { *m = Lazy{} }
func (m *Lazy) String() string            { return proto1.CompactTextString(m) }
func (*Lazy) ProtoMessage()               {}
func (*Lazy) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Lazy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lazy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type DeleteServiceGroupRequest struct {
	ServiceGroup *ServiceGroup `protobuf:"bytes,1,opt,name=serviceGroup" json:"serviceGroup,omitempty"`
}

func (m *DeleteServiceGroupRequest) Reset()                    { *m = DeleteServiceGroupRequest{} }
func (m *DeleteServiceGroupRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteServiceGroupRequest) ProtoMessage()               {}
func (*DeleteServiceGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DeleteServiceGroupRequest) GetServiceGroup() *ServiceGroup {
	if m != nil {
		return m.ServiceGroup
	}
	return nil
}

type CreateServiceGroupRequest struct {
	ServiceGroup *ServiceGroup `protobuf:"bytes,1,opt,name=serviceGroup" json:"serviceGroup,omitempty"`
}

func (m *CreateServiceGroupRequest) Reset()                    { *m = CreateServiceGroupRequest{} }
func (m *CreateServiceGroupRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateServiceGroupRequest) ProtoMessage()               {}
func (*CreateServiceGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CreateServiceGroupRequest) GetServiceGroup() *ServiceGroup {
	if m != nil {
		return m.ServiceGroup
	}
	return nil
}

type ListServiceGroupsResponse struct {
	ServiceGroup []*ServiceGroup `protobuf:"bytes,1,rep,name=serviceGroup" json:"serviceGroup,omitempty"`
}

func (m *ListServiceGroupsResponse) Reset()                    { *m = ListServiceGroupsResponse{} }
func (m *ListServiceGroupsResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListServiceGroupsResponse) ProtoMessage()               {}
func (*ListServiceGroupsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ListServiceGroupsResponse) GetServiceGroup() []*ServiceGroup {
	if m != nil {
		return m.ServiceGroup
	}
	return nil
}

type UpdateServiceGroupRequest struct {
	ServiceGroup *ServiceGroup `protobuf:"bytes,1,opt,name=serviceGroup" json:"serviceGroup,omitempty"`
}

func (m *UpdateServiceGroupRequest) Reset()                    { *m = UpdateServiceGroupRequest{} }
func (m *UpdateServiceGroupRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateServiceGroupRequest) ProtoMessage()               {}
func (*UpdateServiceGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *UpdateServiceGroupRequest) GetServiceGroup() *ServiceGroup {
	if m != nil {
		return m.ServiceGroup
	}
	return nil
}

type ServiceGroupResponse struct {
	ServiceGroup *ServiceGroup `protobuf:"bytes,1,opt,name=serviceGroup" json:"serviceGroup,omitempty"`
}

func (m *ServiceGroupResponse) Reset()                    { *m = ServiceGroupResponse{} }
func (m *ServiceGroupResponse) String() string            { return proto1.CompactTextString(m) }
func (*ServiceGroupResponse) ProtoMessage()               {}
func (*ServiceGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ServiceGroupResponse) GetServiceGroup() *ServiceGroup {
	if m != nil {
		return m.ServiceGroup
	}
	return nil
}

func init() {
	proto1.RegisterType((*ServiceGroup)(nil), "proto.ServiceGroup")
	proto1.RegisterType((*Command)(nil), "proto.Command")
	proto1.RegisterType((*Attribute)(nil), "proto.Attribute")
	proto1.RegisterType((*StaticAttribute)(nil), "proto.StaticAttribute")
	proto1.RegisterType((*Lazy)(nil), "proto.Lazy")
	proto1.RegisterType((*DeleteServiceGroupRequest)(nil), "proto.DeleteServiceGroupRequest")
	proto1.RegisterType((*CreateServiceGroupRequest)(nil), "proto.CreateServiceGroupRequest")
	proto1.RegisterType((*ListServiceGroupsResponse)(nil), "proto.ListServiceGroupsResponse")
	proto1.RegisterType((*UpdateServiceGroupRequest)(nil), "proto.UpdateServiceGroupRequest")
	proto1.RegisterType((*ServiceGroupResponse)(nil), "proto.ServiceGroupResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ServiceGroupsService service

type ServiceGroupsServiceClient interface {
	DeleteServiceGroup(ctx context.Context, in *DeleteServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	CreateServiceGroup(ctx context.Context, in *CreateServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListServiceGroups(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListServiceGroupsResponse, error)
	UpdateServiceGroup(ctx context.Context, in *UpdateServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ServiceGroup(ctx context.Context, in *google_protobuf2.StringValue, opts ...grpc.CallOption) (*ServiceGroupResponse, error)
}

type serviceGroupsServiceClient struct {
	cc *grpc.ClientConn
}

func NewServiceGroupsServiceClient(cc *grpc.ClientConn) ServiceGroupsServiceClient {
	return &serviceGroupsServiceClient{cc}
}

func (c *serviceGroupsServiceClient) DeleteServiceGroup(ctx context.Context, in *DeleteServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/proto.ServiceGroupsService/DeleteServiceGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceGroupsServiceClient) CreateServiceGroup(ctx context.Context, in *CreateServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/proto.ServiceGroupsService/CreateServiceGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceGroupsServiceClient) ListServiceGroups(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListServiceGroupsResponse, error) {
	out := new(ListServiceGroupsResponse)
	err := grpc.Invoke(ctx, "/proto.ServiceGroupsService/ListServiceGroups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceGroupsServiceClient) UpdateServiceGroup(ctx context.Context, in *UpdateServiceGroupRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/proto.ServiceGroupsService/UpdateServiceGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceGroupsServiceClient) ServiceGroup(ctx context.Context, in *google_protobuf2.StringValue, opts ...grpc.CallOption) (*ServiceGroupResponse, error) {
	out := new(ServiceGroupResponse)
	err := grpc.Invoke(ctx, "/proto.ServiceGroupsService/ServiceGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ServiceGroupsService service

type ServiceGroupsServiceServer interface {
	DeleteServiceGroup(context.Context, *DeleteServiceGroupRequest) (*google_protobuf1.Empty, error)
	CreateServiceGroup(context.Context, *CreateServiceGroupRequest) (*google_protobuf1.Empty, error)
	ListServiceGroups(context.Context, *google_protobuf1.Empty) (*ListServiceGroupsResponse, error)
	UpdateServiceGroup(context.Context, *UpdateServiceGroupRequest) (*google_protobuf1.Empty, error)
	ServiceGroup(context.Context, *google_protobuf2.StringValue) (*ServiceGroupResponse, error)
}

func RegisterServiceGroupsServiceServer(s *grpc.Server, srv ServiceGroupsServiceServer) {
	s.RegisterService(&_ServiceGroupsService_serviceDesc, srv)
}

func _ServiceGroupsService_DeleteServiceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceGroupsServiceServer).DeleteServiceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceGroupsService/DeleteServiceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceGroupsServiceServer).DeleteServiceGroup(ctx, req.(*DeleteServiceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceGroupsService_CreateServiceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceGroupsServiceServer).CreateServiceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceGroupsService/CreateServiceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceGroupsServiceServer).CreateServiceGroup(ctx, req.(*CreateServiceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceGroupsService_ListServiceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceGroupsServiceServer).ListServiceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceGroupsService/ListServiceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceGroupsServiceServer).ListServiceGroups(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceGroupsService_UpdateServiceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceGroupsServiceServer).UpdateServiceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceGroupsService/UpdateServiceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceGroupsServiceServer).UpdateServiceGroup(ctx, req.(*UpdateServiceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceGroupsService_ServiceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceGroupsServiceServer).ServiceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceGroupsService/ServiceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceGroupsServiceServer).ServiceGroup(ctx, req.(*google_protobuf2.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceGroupsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ServiceGroupsService",
	HandlerType: (*ServiceGroupsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteServiceGroup",
			Handler:    _ServiceGroupsService_DeleteServiceGroup_Handler,
		},
		{
			MethodName: "CreateServiceGroup",
			Handler:    _ServiceGroupsService_CreateServiceGroup_Handler,
		},
		{
			MethodName: "ListServiceGroups",
			Handler:    _ServiceGroupsService_ListServiceGroups_Handler,
		},
		{
			MethodName: "UpdateServiceGroup",
			Handler:    _ServiceGroupsService_UpdateServiceGroup_Handler,
		},
		{
			MethodName: "ServiceGroup",
			Handler:    _ServiceGroupsService_ServiceGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serviceGroups.proto",
}

func init() { proto1.RegisterFile("serviceGroups.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4f, 0x4f, 0xdb, 0x4c,
	0x10, 0xc6, 0x5f, 0x70, 0x02, 0xc9, 0xc0, 0x4b, 0xc3, 0x92, 0x22, 0x93, 0xa0, 0x2a, 0x8a, 0x7a,
	0x08, 0x52, 0xe5, 0xa8, 0x69, 0xa5, 0x4a, 0xbd, 0x21, 0x82, 0x2a, 0x04, 0x6d, 0x90, 0x43, 0x7b,
	0x8d, 0x36, 0xc9, 0x34, 0xda, 0x36, 0xf6, 0x6e, 0xbd, 0x6b, 0x2a, 0xf3, 0x91, 0xfa, 0x81, 0xfa,
	0x79, 0x2a, 0x6f, 0x36, 0x66, 0xf3, 0xc7, 0x28, 0x07, 0x4e, 0xd6, 0xcc, 0x3c, 0xf3, 0xf3, 0x78,
	0x1e, 0xef, 0xc2, 0x91, 0xc4, 0xe8, 0x9e, 0x8d, 0xf0, 0x53, 0xc4, 0x63, 0x21, 0x3d, 0x11, 0x71,
	0xc5, 0x49, 0x51, 0x3f, 0x6a, 0xa7, 0x13, 0xce, 0x27, 0x53, 0x6c, 0x53, 0xc1, 0xda, 0x34, 0x0c,
	0xb9, 0xa2, 0x8a, 0xf1, 0xd0, 0x88, 0x6a, 0x75, 0x53, 0xd5, 0xd1, 0x30, 0xfe, 0xde, 0xc6, 0x40,
	0xa8, 0xc4, 0x14, 0x5f, 0x2d, 0x17, 0x7f, 0x47, 0x54, 0x08, 0x8c, 0x4c, 0x73, 0xf3, 0xaf, 0x03,
	0xfb, 0x7d, 0xeb, 0xcd, 0xa4, 0x01, 0x3b, 0xe7, 0x82, 0x5d, 0x63, 0xe2, 0x6e, 0x35, 0xb6, 0x5a,
	0x65, 0xbf, 0x42, 0x05, 0xfb, 0x89, 0xc9, 0x1b, 0x1e, 0x30, 0xa5, 0xc1, 0xe4, 0x0c, 0xe0, 0x32,
	0x54, 0x4c, 0x25, 0x77, 0x89, 0x40, 0x77, 0x5b, 0xab, 0x5e, 0xa2, 0xce, 0x0c, 0x54, 0x22, 0xd0,
	0x92, 0xbe, 0x86, 0x92, 0x8f, 0x92, 0xc7, 0xd1, 0x08, 0x5d, 0x47, 0x0b, 0x49, 0x64, 0x62, 0x4b,
	0xf5, 0x1e, 0x4a, 0x17, 0x3c, 0x08, 0x68, 0x38, 0x96, 0x6e, 0xa1, 0xe1, 0xb4, 0xf6, 0x3a, 0x07,
	0xb3, 0xe9, 0x3c, 0x93, 0xf6, 0xc9, 0xc8, 0xd4, 0xad, 0xae, 0x8f, 0x00, 0xe7, 0x4a, 0x45, 0x6c,
	0x18, 0x2b, 0x94, 0x6e, 0x51, 0xf7, 0x55, 0x4c, 0x5f, 0x56, 0xf0, 0xab, 0x34, 0xd3, 0x58, 0xbd,
	0x9f, 0xa1, 0xd2, 0x4f, 0x97, 0x38, 0xb2, 0x08, 0x3b, 0x9a, 0x70, 0x6c, 0x08, 0x4b, 0x65, 0xbf,
	0x2e, 0x75, 0x62, 0xb0, 0x16, 0x77, 0x06, 0x85, 0x1b, 0xfa, 0x90, 0xb8, 0xbb, 0x1a, 0xb1, 0x67,
	0x10, 0x69, 0xca, 0x3f, 0x98, 0xd2, 0x07, 0x7b, 0x79, 0x4d, 0xd8, 0x35, 0xeb, 0x76, 0x4b, 0x7a,
	0x21, 0x87, 0xc6, 0x77, 0x4b, 0xd3, 0x02, 0xe8, 0xc7, 0x43, 0x93, 0x77, 0xcb, 0x5a, 0x56, 0x95,
	0x59, 0xc6, 0x52, 0x9e, 0xc0, 0xf6, 0x55, 0xd7, 0x05, 0xad, 0xf8, 0x7f, 0xc0, 0xc6, 0x8f, 0xa5,
	0xe6, 0x5b, 0xd8, 0x35, 0xdb, 0x23, 0x04, 0x0a, 0x5f, 0x68, 0x80, 0xc6, 0xd0, 0x42, 0x48, 0x03,
	0x4c, 0x73, 0x96, 0x7d, 0x85, 0xd4, 0xb7, 0xe6, 0x2d, 0x94, 0xb3, 0x0f, 0x26, 0x75, 0x28, 0xf5,
	0x86, 0x3f, 0x70, 0xa4, 0xae, 0xba, 0xa6, 0xb1, 0xcc, 0x75, 0x3c, 0x60, 0x8f, 0xc4, 0xed, 0x35,
	0x44, 0xc7, 0x22, 0xf6, 0xe0, 0xc5, 0xd2, 0x22, 0x49, 0x15, 0x8a, 0xdf, 0xe8, 0x34, 0x9e, 0x4f,
	0x53, 0xbc, 0x4f, 0x83, 0x8d, 0x81, 0xde, 0x6c, 0xd3, 0x1b, 0x7f, 0xd2, 0x1d, 0x9c, 0x74, 0x71,
	0x8a, 0x0a, 0xed, 0x7f, 0xdc, 0xc7, 0x5f, 0x31, 0x4a, 0x45, 0x3e, 0xc0, 0xbe, 0x7d, 0xe8, 0x34,
	0x6c, 0xaf, 0x73, 0x34, 0xff, 0x03, 0xec, 0x8e, 0x05, 0x61, 0x4a, 0xbd, 0x88, 0x90, 0x3e, 0x3f,
	0xf5, 0x86, 0x49, 0x65, 0x2b, 0xa4, 0x8f, 0x52, 0xf0, 0x50, 0xe2, 0x1a, 0xaa, 0xb3, 0x31, 0xf5,
	0xab, 0x18, 0x3f, 0xf7, 0xac, 0x3d, 0xa8, 0x2e, 0xf2, 0x72, 0xc7, 0xdc, 0x0c, 0xd8, 0xf9, 0xe3,
	0x2c, 0x12, 0xa5, 0x09, 0xc8, 0x2d, 0x90, 0x55, 0x07, 0x49, 0xc3, 0x10, 0x73, 0xcd, 0xad, 0x1d,
	0x7b, 0xb3, 0x9b, 0xcf, 0x9b, 0xdf, 0x7c, 0xde, 0xa5, 0x3e, 0x17, 0xff, 0xa5, 0xc4, 0x55, 0xf7,
	0x32, 0x62, 0xae, 0xb1, 0x4f, 0x10, 0x7b, 0x70, 0xb8, 0xe2, 0x1c, 0xc9, 0x91, 0xd7, 0xe6, 0x2f,
	0xca, 0xf5, 0x7a, 0x36, 0xe2, 0xaa, 0x69, 0xd9, 0x88, 0xb9, 0x7e, 0x3e, 0x31, 0xe2, 0xf5, 0xd2,
	0x35, 0x7f, 0xba, 0xa2, 0xec, 0xab, 0x88, 0x85, 0x13, 0x7d, 0x36, 0x6b, 0xf5, 0x75, 0x86, 0x65,
	0xe3, 0x0d, 0x77, 0x74, 0xf5, 0xdd, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x37, 0x33, 0x24, 0x34,
	0xb4, 0x06, 0x00, 0x00,
}
